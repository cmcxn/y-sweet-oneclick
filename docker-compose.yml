services:
  minio:
    image: minio/minio:latest
    container_name: minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - minio-data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    networks: [ys-net]

  minio-init:
    image: minio/mc:latest
    container_name: minio-init
    depends_on:
      - minio
    entrypoint: ["/bin/sh","-c"]
    command: >
      "
      set -e;
      until (/usr/bin/mc alias set local http://minio:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD}); do
        echo '...waiting for minio...'; sleep 2;
      done;
      /usr/bin/mc ls local || true;
      /usr/bin/mc mb -p local/${S3_BUCKET} || true;
      /usr/bin/mc anonymous set none local/${S3_BUCKET} || true;
      echo 'MinIO init done';
      "
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      S3_BUCKET: ${S3_BUCKET}
    networks: [ys-net]

  ysweet:
    image: node:20-alpine
    container_name: ysweet
    depends_on:
      - minio
      - minio-init
    working_dir: /app
    entrypoint: ["/bin/sh","-lc"]
    # 使用 npx 启动 y-sweet，并把数据持久化到 MinIO (S3 兼容存储)
    command: >
      "npx y-sweet@latest serve s3://${S3_BUCKET}/${S3_PREFIX:-y-docs}"
    environment:
      # S3 兼容存储凭据（MinIO）
      AWS_ACCESS_KEY_ID: ${MINIO_ROOT_USER}
      AWS_SECRET_ACCESS_KEY: ${MINIO_ROOT_PASSWORD}
      AWS_REGION: ${AWS_REGION}
      AWS_ENDPOINT_URL: http://minio:9000
    ports:
      - "8080:8080"
    networks: [ys-net]

  auth:
    image: node:20-alpine
    container_name: ysweet-auth
    working_dir: /srv
    volumes:
      - ./auth:/srv
    environment:
      # 从 ysweet 容器日志或下方静态拼接获取连接串；默认直连 127.0.0.1:8080
      CONNECTION_STRING: ${CONNECTION_STRING:-ys://ysweet:8080}
      PORT: ${AUTH_PORT:-3000}
    command: ["/bin/sh","-lc","npm install && node server.js"]
    depends_on:
      - ysweet
    ports:
      - "${AUTH_PORT:-3000}:3000"
    networks: [ys-net]

networks:
  ys-net:

volumes:
  minio-data:
